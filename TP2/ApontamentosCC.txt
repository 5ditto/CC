Merdas para fazer para a fase1:
- Elementos que achamos que têm que estar na topologia
- Módulos que cada elemento tem que ter e como eles funcionam
- Modelo de dados: especificar como as mensagens são enviadas e como é que elas são constituidas (basicamente copiado do enunciado)
- Temos que explicar detalhadamente a topologia e explicar o papel de cada máquina na topologia


Só os servidores primários é que precisam do ficheiro de dados.
Todos os outros têm o ficheiro de configuração. 
Um servidor primário não pode estar na mesma rede local que um servidor secundário do mesmo domínio
SP e os SS têm que estar todos separados
Quando se faz uma pergunta a um SP ou SS que não é sobre o seu domínio eles perguntam sempre a um ST


Código:
- Mandar uma mensagem query de um CL para um servidor e o servidor responder. Depois o CL imprime a resposta para o ecrâ.
- SS quando inicia faz a transferência de zona com o SP (pede uma cópia dos dados), para isso temos que iniciar uma comunicação TCP entre o SS e o SP e comunicar por lá.
- O resto das comunicações são feitas por UDP.
- Para entender um pedido usa-se multithreading (para a segunda fase do trabalho, cada query vai ter uma thread para a satisfazer)
- Para o TTL, temos uma variável com a data do sistema ao iniciar o programa e depois ao verificar um campo da base de dados verificamos o tempo que passou entre os momentos
- Nos SS's, quando eles acedem a sua base de dados ele tem que verificar se o SOAEXPIRE já foi esgotado ou não e se já tiver sido esgotado todas as entradas são postas como free.
Para verificarmos se o SOAEXPIRE já esgotou ou não, ao receber a informação o SS guarda numa variável o "time stamp" e depois da próxima vez que aceder a cache verifica a diferença
de tempo entre as duas consultas da cache e compara com o SOAEXPIRE.


Topologia:
- Não é preciso mudar nenhum endereço IP da topologia
- O root tem uma lista de todos os domínios e os seus SP's e SS's. Os ST's têm a mesma informação na sua base de dados
- 2 ST's na topologia em diferentes redes locais
- 2 SDT's (2 domínios) com nomes diferentes
- O normal é que todas as máquinas da mesma rede local sejam do mesmo domínio
- Os SDT's têm informação sobre todas as máquinas que pertencem ao seu domínio
- 2 sub-domínios (um sub-domínio para cada SDT, para cada domínio)
- A base de dados de cada um dos ST's e SDT's estam nos seus respetivos SP's, a base de dados de um SDT de um determinado domínio está no SP desse domínio
- Por cada sub-domínio há um SP e dois SS em que os SS têm uma cópia da base de dados do SP
- Um SR nunca tem nada na sua cache. Quando alguém pede alguma informação ao SR e ele não tem em cache, ele vai pedir a quem tem essa informação e ao reencaminhar a informação
a quem lha pediu insere a informação na sua própria cache. Quando tem a reposta na cache responde diretamente a quem pediu a informação

Domínio reverse mapping:
- Chamar o domínio de ".reverse"
- Faz o processo contrário ao DNS, a partir do endereço ele devolve o nome da máquina






